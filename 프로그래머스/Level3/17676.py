# 2018 KAKAO BLIND RECRUITMENT > [1차] 추석 트래픽
# https://programmers.co.kr/learn/courses/30/lessons/17676

def solution(lines):
    times = []

    for line in lines:
        time = line.split()
        clock = time[1].split(":")
        times.append([float(clock[0]) * 60 * 60 + float(clock[1]) * 60 + float(clock[2]), float(time[2][:-1])])

    answer = 0
    count = 0
    for i in range(len(times)):
        start = times[i][0]
        end = start + 1
        for j in range(i, len(times)):
            if round(times[j][0] - times[j][1] + 0.001, 3) < end and start <= times[j][0]:
                count += 1
        answer = max(answer, count)
        count = 0

    print(answer)
    return answer

solution([
"2016-09-15 20:59:57.421 0.351s",
"2016-09-15 20:59:58.233 1.181s",
"2016-09-15 20:59:58.299 0.8s",
"2016-09-15 20:59:58.688 1.041s",
"2016-09-15 20:59:59.591 1.412s",
"2016-09-15 21:00:00.464 1.466s",
"2016-09-15 21:00:00.741 1.581s",
"2016-09-15 21:00:00.748 2.31s",
"2016-09-15 21:00:00.966 0.381s",
"2016-09-15 21:00:02.066 2.62s"
])

# solution([
# "2016-09-15 01:00:04.002 2.0s",
# "2016-09-15 01:00:07.000 2s"
# ])

# solution([
# "2016-09-15 01:00:04.001 2.0s",
# "2016-09-15 01:00:07.000 2s"
# ])
#
# solution([
# "2016-09-15 01:00:04.001 1.0s",
# "2016-09-15 01:00:04.001 2.0s",
# "2016-09-15 01:00:06.001 1.0s",
# ])
#
# solution(["2016-09-15 01:00:04.001 2.0s", "2016-09-15 01:00:07.000 2s"])
#
# solution(["2016-09-15 20:59:57.421 0.351s", "2016-09-15 20:59:58.233 1.181s", "2016-09-15 20:59:58.299 0.8s", "2016-09-15 20:59:58.688 1.041s", "2016-09-15 20:59:59.591 1.412s", "2016-09-15 21:00:00.464 1.466s", "2016-09-15 21:00:00.741 1.581s", "2016-09-15 21:00:00.748 2.31s", "2016-09-15 21:00:00.966 0.381s", "2016-09-15 21:00:02.066 2.62s"])